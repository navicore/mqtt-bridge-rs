################################################################################
# Arguments
################################################################################
ARG rust_revision="1.27.0"

################################################################################
# Base image
################################################################################

FROM resin/%%RESIN_MACHINE_NAME%%-debian as base

ENV INITSYSTEM=on
ENV DEBIAN_FRONTEND=noninteractive

################################################################################
# Rust image
################################################################################

FROM base as rust

# Install build tools
RUN apt-get -q update && apt-get install -yq --no-install-recommends build-essential curl file pkg-config libssl-dev

ENV PATH=/root/.cargo/bin:$PATH


################################################### 
# ejs NOTE won't build on zero without this bs    #
# ejs TODO: make script know arm6l vs arm7l vs... #
################################################### 
# https://github.com/rust-lang-nursery/rustup.rs/issues/1055
# for rpi 3+
#RUN cp `which uname` /bin/uname-orig && echo '#!/bin/bash\nif [[ $1 == "-m" ]]; then echo "armv7l"; else /bin/uname-orig $@; fi;' > `which uname`
# for rpi zero
RUN cp `which uname` /bin/uname-orig && echo '#!/bin/bash\nif [[ $1 == "-m" ]]; then echo "armv6l"; else /bin/uname-orig $@; fi;' > `which uname`

# Install specific version of Rust (see ARG)
RUN curl -sSf https://static.rust-lang.org/rustup.sh | sh -s -- -y --revision=${rust_revision}

################################################################################
# Builder
################################################################################

FROM rust as builder
ENV OPENSSL_DIR=/usr

COPY . /build/app

# Build real app
WORKDIR /build/app
RUN rm -rf target/release/mqtt*
RUN cargo build --release

################################################################################
# Final image
################################################################################

FROM base

# Copy binary from builder image
WORKDIR /app
COPY --from=builder /build/app/target/release/mqtt-bridge-rs .
COPY --from=builder /build/app/config config/

# Copy other folders required by the application. Example:
#
# COPY --from=builder /build/app/assets ./assets

# Launch application
CMD ["/app/mqtt-bridge-rs"]
